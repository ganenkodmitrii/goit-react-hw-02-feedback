{"version":3,"sources":["components/Container/Container.js","components/capitalizeFirstLetter/capitalizeFirstLetter.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","capitalizeFirstLetter","string","toUpperCase","slice","toLowerCase","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","type","style","marginRight","onClick","Section","title","color","margin","padding","Statistics","total","positivePercentage","App","state","good","neutral","bad","handleAddStatistics","statistic","setState","prevStatistic","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","require","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,ICH1B,SAASI,EAAsBC,GAC1C,OAAOA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,GAAGC,cCErD,IAsBeC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC1B,wBACIC,KAAK,SACLC,MAAO,CAAEC,YAAa,OAEtBC,QAAS,kBAAMR,EAAgBI,IAJnC,SAMKX,EAAsBW,IAHlBA,SCRV,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOrB,EAAY,EAAZA,SACrC,OACI,gCACKqB,GACG,oBACIJ,MAAO,CACHK,MAAO,QACPC,OAAQ,IACRC,QAAS,KAJjB,SAOKH,IAGRrB,KCZb,IAsCeyB,EAtCI,SAAC,GAA4C,IAA1Cf,EAAyC,EAAzCA,QAASgB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAClC,OACI,gCACKf,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC1B,oBACIE,MAAO,CACHK,MAAO,SAFf,UAMKlB,EAAsBW,GAN3B,KAMoCL,EAAQK,KAFnCA,MAKb,oBACIE,MAAO,CACHK,MAAO,SAFf,oBAKYI,KAEZ,oBACIT,MAAO,CACHK,MAAO,SAFf,+BAMKK,EANL,WCnBSC,E,4MACjBC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTC,oBAAsB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GAAa,sBACtBF,EAAYE,EAAcF,GAAa,O,EAIhDG,mBAAqB,WACjB,OAAOzB,OAAO0B,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKzB,GAAN,OAAeyB,EAAMzB,IAAM,I,EAGvE0B,gCAAkC,WAC9B,OAAOC,KAAKC,MAAO,EAAKd,MAAMC,KAAO,EAAKO,qBAAwB,M,uDAIlE,OACI,eAACtC,EAAD,WACI,cAACqB,EAAD,CAASC,MAAM,wBAAf,SACI,cAAC,EAAD,CACIX,QAASkC,KAAKf,MACdlB,gBAAiBiC,KAAKX,wBAG9B,cAACb,EAAD,CAASC,MAAM,aAAf,SACI,cAAC,EAAD,CACIX,QAASkC,KAAKf,MAIdH,MAAOkB,KAAKP,qBACZV,mBAAoBiB,KAAKH,6C,GAtC3BI,EAAQ,GAAtBC,WCCRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.94bf33c9.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nexport default function Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n","export default function capitalizeFirstLetter(string) {\r\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport capitalizeFirstLetter from '../capitalizeFirstLetter/capitalizeFirstLetter';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div>\r\n            {Object.keys(options).map(item => (\r\n                <button\r\n                    type=\"button\"\r\n                    style={{ marginRight: '5px' }}\r\n                    key={item}\r\n                    onClick={() => onLeaveFeedback(item)}\r\n                >\r\n                    {capitalizeFirstLetter(item)}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.objectOf(PropTypes.number),\r\n    onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div>\r\n            {title && (\r\n                <h1\r\n                    style={{\r\n                        color: 'white',\r\n                        margin: '0',\r\n                        padding: '0',\r\n                    }}\r\n                >\r\n                    {title}\r\n                </h1>\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport capitalizeFirstLetter from '../capitalizeFirstLetter/capitalizeFirstLetter';\r\n\r\nconst Statistics = ({ options, total, positivePercentage }) => {\r\n    return (\r\n        <div>\r\n            {Object.keys(options).map(item => (\r\n                <p\r\n                    style={{\r\n                        color: 'white',\r\n                    }}\r\n                    key={item}\r\n                >\r\n                    {capitalizeFirstLetter(item)}: {options[item]}\r\n                </p>\r\n            ))}\r\n            <p\r\n                style={{\r\n                    color: 'white',\r\n                }}\r\n            >\r\n                Total: {total}\r\n            </p>\r\n            <p\r\n                style={{\r\n                    color: 'white',\r\n                }}\r\n            >\r\n                Positive feedback:\r\n                {positivePercentage}%\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    options: PropTypes.objectOf(PropTypes.number),\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nconst { Component } = require('react');\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleAddStatistics = statistic => {\n        this.setState(prevStatistic => ({\n            [statistic]: prevStatistic[statistic] + 1,\n        }));\n    };\n\n    countTotalFeedback = () => {\n        return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    };\n\n    render() {\n        return (\n            <Container>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={this.state}\n                        onLeaveFeedback={this.handleAddStatistics}\n                    />\n                </Section>\n                <Section title=\"Statistics\">\n                    <Statistics\n                        options={this.state}\n                        // good={}\n                        // neutral={}\n                        // bad={}\n                        total={this.countTotalFeedback()}\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\n                    />\n                </Section>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1UyCu\"};"],"sourceRoot":""}