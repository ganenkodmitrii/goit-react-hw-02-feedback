{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/capitalizeFirstLetter/capitalizeFirstLetter.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","title","children","className","s","container","capitalizeFirstLetter","string","toUpperCase","slice","toLowerCase","FeedbackOptions","options","onLeaveFeedback","boxButton","Object","keys","map","item","type","button","onClick","Section","Statistics","total","positivePercentage","list","Notification","message","App","state","good","neutral","bad","handleAddStatistics","statistic","setState","prevStatistic","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","require","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,gBCAnED,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,oBCA1ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCEb,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACKJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,KCPE,SAASI,EAAsBC,GAC1C,OAAOA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,GAAGC,c,oBCwBtCC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKV,UAAWC,IAAEU,UAAlB,SACKC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAI,OAC1B,wBACIC,KAAK,SACLhB,UAAWC,IAAEgB,OAEbC,QAAS,kBAAMR,EAAgBK,IAJnC,SAMKZ,EAAsBY,IAHlBA,S,iBCPV,SAASI,EAAT,GAAuC,IAApBrB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,gCACKD,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,K,oBCkBEqB,EApBI,SAAC,GAA4C,IAA1CX,EAAyC,EAAzCA,QAASY,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAClC,OACI,sBAAKtB,UAAWC,IAAEsB,KAAlB,UACKX,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAI,OAC1B,oBAAGf,UAAWC,IAAEc,KAAhB,UACKZ,EAAsBY,GAD3B,KACoCN,EAAQM,KADjBA,MAI/B,oBAAGf,UAAWC,IAAEc,KAAhB,oBAA8BM,KAC9B,oBAAGrB,UAAWC,IAAEc,KAAhB,gCAA0CO,EAA1C,Y,iBCXG,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,mBAAGzB,UAAWC,IAAEwB,QAAhB,SAA0BA,I,ICKhBC,E,4MACjBC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTC,oBAAsB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GAAa,sBACtBF,EAAYE,EAAcF,GAAa,O,EAIhDG,mBAAqB,WACjB,OAAOvB,OAAOwB,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKvB,GAAN,OAAeuB,EAAMvB,IAAM,I,EAGvEwB,gCAAkC,WAC9B,OACIC,KAAKC,MAAO,EAAKd,MAAMC,KAAO,EAAKO,qBAAwB,MAAQ,G,uDAKvE,OACI,eAACtC,EAAD,CAAWC,MAAM,wBAAjB,UACI,cAACqB,EAAD,CAASrB,MAAM,wBAAf,SACI,cAAC,EAAD,CACIW,QAASiC,KAAKf,MACdjB,gBAAiBgC,KAAKX,wBAG9B,cAACZ,EAAD,CAASrB,MAAM,aAAf,SACK4C,KAAKP,qBACF,cAAC,EAAD,CACI1B,QAASiC,KAAKf,MAIdN,MAAOqB,KAAKP,qBACZb,mBAAoBoB,KAAKH,oCAG7B,cAACf,EAAD,CAAcC,QAAQ,+B,GA7CxBkB,EAAQ,GAAtBC,WCFRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.72b0fc5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3YcH5\",\"item\":\"Statistics_item__1NyHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1UyCu\",\"title\":\"Container_title__35GEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxButton\":\"FeedbackOptions_boxButton__hc1Vr\",\"button\":\"FeedbackOptions_button__1Mheo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2J2Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__11HF7\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ title, children }) {\n    return (\n        <div className={s.container}>\n            {title && <h1 className={s.title}>{title}</h1>}\n            {children}\n        </div>\n    );\n}\n\nContainer.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n","export default function capitalizeFirstLetter(string) {\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\n}\n","import PropTypes from 'prop-types';\nimport capitalizeFirstLetter from '../capitalizeFirstLetter/capitalizeFirstLetter';\nimport s from './FeedbackOptions.module.css';\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return (\n        <div className={s.boxButton}>\n            {Object.keys(options).map(item => (\n                <button\n                    type=\"button\"\n                    className={s.button}\n                    key={item}\n                    onClick={() => onLeaveFeedback(item)}\n                >\n                    {capitalizeFirstLetter(item)}\n                </button>\n            ))}\n        </div>\n    );\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.objectOf(PropTypes.number),\n    onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n    return (\n        <div>\n            {title && <h2 className={s.title}>{title}</h2>}\n            {children}\n        </div>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nimport capitalizeFirstLetter from '../capitalizeFirstLetter/capitalizeFirstLetter';\n\nconst Statistics = ({ options, total, positivePercentage }) => {\n    return (\n        <div className={s.list}>\n            {Object.keys(options).map(item => (\n                <p className={s.item} key={item}>\n                    {capitalizeFirstLetter(item)}: {options[item]}\n                </p>\n            ))}\n            <p className={s.item}>Total: {total}</p>\n            <p className={s.item}>Positive feedback: {positivePercentage} %</p>\n        </div>\n    );\n};\n\nStatistics.propTypes = {\n    options: PropTypes.objectOf(PropTypes.number),\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n    return <p className={s.message}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n","// import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nconst { Component } = require('react');\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleAddStatistics = statistic => {\n        this.setState(prevStatistic => ({\n            [statistic]: prevStatistic[statistic] + 1,\n        }));\n    };\n\n    countTotalFeedback = () => {\n        return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        return (\n            Math.round((this.state.good / this.countTotalFeedback()) * 100) || 0\n        );\n    };\n\n    render() {\n        return (\n            <Container title=\"Cafe «Expresso»\">\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={this.state}\n                        onLeaveFeedback={this.handleAddStatistics}\n                    />\n                </Section>\n                <Section title=\"Statistics\">\n                    {this.countTotalFeedback() ? (\n                        <Statistics\n                            options={this.state}\n                            // good={}\n                            // neutral={}\n                            // bad={}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\n                        />\n                    ) : (\n                        <Notification message=\"No feedback given\" />\n                    )}\n                </Section>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}