{"version":3,"sources":["components/Container/Container.js","App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","App","state","good","neutral","bad","handleAddStatistics","statistic","setState","prevStatistic","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","style","color","margin","padding","keys","this","map","type","marginRight","onClick","require","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,KCApBI,E,4MACjBC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTC,oBAAsB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GAAa,sBACtBF,EAAYE,EAAcF,GAAa,O,EAsBhDG,mBAAqB,WACjB,OAAOC,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGvEC,gCAAkC,WAC9B,OAAOC,KAAKC,MAAO,EAAKhB,MAAMC,KAAO,EAAKO,qBAAwB,M,uDAG5D,IAAD,OACL,OACI,cAAC,EAAD,UACI,gCACI,oBACIS,MAAO,CACHC,MAAO,QACPC,OAAQ,IACRC,QAAS,KAJjB,mCAUA,8BACKX,OAAOY,KAAKC,KAAKtB,OAAOuB,KAAI,SAAAV,GAAI,OAC7B,wBACIW,KAAK,SACLP,MAAO,CAAEQ,YAAa,OAEtBC,QAAS,kBAAM,EAAKtB,oBAAoBS,IAJ5C,SAMKA,GAHIA,QAyBjB,8BACKJ,OAAOY,KAAKC,KAAKtB,OAAOuB,KAAI,SAAAV,GAAI,OAC7B,oBACII,MAAO,CACHC,MAAO,SAFf,UAOKL,EAPL,KAOa,EAAKb,MAAMa,KAHfA,QA6BjB,oBACII,MAAO,CACHC,MAAO,SAFf,oBAKYI,KAAKd,wBAEjB,oBACIS,MAAO,CACHC,MAAO,SAFf,+BAMKI,KAAKR,kCANV,gB,GA/HEa,EAAQ,GAAtBC,WCIRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.90581295.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import Container from './components/Container/Container';\nconst { Component } = require('react');\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleAddStatistics = statistic => {\n        this.setState(prevStatistic => ({\n            [statistic]: prevStatistic[statistic] + 1,\n        }));\n    };\n\n    // handleAddStatisticsGood = () => {\n    //     this.setState(prevStatistic => ({\n    //         good: prevStatistic.good + 1,\n    //     }));\n    // };\n\n    // handleAddStatisticsNeutral = () => {\n    //     this.setState(prevStatistic => ({\n    //         neutral: prevStatistic.neutral + 1,\n    //     }));\n    // };\n\n    // handleAddStatisticsBad = () => {\n    //     this.setState(prevStatistic => ({\n    //         bad: prevStatistic.bad + 1,\n    //     }));\n    // };\n\n    countTotalFeedback = () => {\n        return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    };\n\n    render() {\n        return (\n            <Container>\n                <div>\n                    <h1\n                        style={{\n                            color: 'white',\n                            margin: '0',\n                            padding: '0',\n                        }}\n                    >\n                        Please leave feedback\n                    </h1>\n\n                    <div>\n                        {Object.keys(this.state).map(item => (\n                            <button\n                                type=\"button\"\n                                style={{ marginRight: '5px' }}\n                                key={item}\n                                onClick={() => this.handleAddStatistics(item)}\n                            >\n                                {item}\n                            </button>\n                        ))}\n                    </div>\n                    {/* <button\n                        type=\"button\"\n                        style={{ marginRight: '5px' }}\n                        onClick={this.handleAddStatisticsGood}\n                    >\n                        good\n                    </button>\n                    <button\n                        type=\"button\"\n                        style={{ marginRight: '5px' }}\n                        onClick={this.handleAddStatisticsNeutral}\n                    >\n                        neutral\n                    </button>\n                    <button type=\"button\" onClick={this.handleAddStatisticsBad}>\n                        bad\n                    </button> */}\n\n                    <div>\n                        {Object.keys(this.state).map(item => (\n                            <p\n                                style={{\n                                    color: 'white',\n                                }}\n                                key={item}\n                            >\n                                {/* function(item) */}\n                                {item}: {this.state[item]}\n                            </p>\n                        ))}\n                    </div>\n\n                    {/* <p\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        Good: {this.state.good}\n                    </p>\n                    <p\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        Neutral: {this.state.neutral}\n                    </p>\n                    <p\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        Bad: {this.state.bad}\n                    </p> */}\n                    <p\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        total: {this.countTotalFeedback()}\n                    </p>\n                    <p\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        Positive feedback:\n                        {this.countPositiveFeedbackPercentage()}%\n                    </p>\n                </div>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1UyCu\"};"],"sourceRoot":""}